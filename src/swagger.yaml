openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: API with endpoints for Users, Products, and Catalog.

paths:
  /api/users/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  exp:
                    type: integer
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      roles:
                        type: string

  /api/users/logout:
    post:
      summary: User logout
      responses:
        200:
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/users/refresh-token:
    post:
      summary: Refresh user token
      responses:
        200:
          description: Token successfully refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  refreshedToken:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      roles:
                        type: string

  /api/users/me:
    get:
      summary: Get current user information
      responses:
        200:
          description: Current user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      roles:
                        type: string
                  token:
                    type: string

  /api/users:
    get:
      summary: List all users
      responses:
        200:
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        roles:
                          type: string
                        email:
                          type: string
                  totalDocs:
                    type: integer

  /api/users/{id}:
    get:
      summary: Get user information by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  roles:
                    type: string
                  email:
                    type: string

    patch:
      summary: Update user information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                roles:
                  type: string
      responses:
        200:
          description: Successful update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  doc:
                    type: object

    delete:
      summary: Delete a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/products:
    get:
      summary: List all products
      responses:
        200:
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        price:
                          type: number
                        quantity:
                          type: integer

    post:
      summary: Create new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                quantity:
                  type: integer
      responses:
        201:
          description: Product successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  doc:
                    type: object

  /api/products/{id}:
    get:
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Product found
          content:
            application/json:
              schema:
                type: object

    patch:
      summary: Update product information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                quantity:
                  type: integer
      responses:
        200:
          description: Product successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  doc:
                    type: object

    delete:
      summary: Delete a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Product successfully deleted

  /api/catalog:
    get:
      summary: List catalogs
      responses:
        200:
          description: List of catalogs
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        products:
                          type: array
                          items:
                            type: string

    post:
      summary: Create new catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                products:
                  type: array
                  items:
                    type: string
      responses:
        201:
          description: Catalog successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  doc:
                    type: object

  /api/catalog/{id}:
    get:
      summary: Get catalog by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Catalog found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  products:
                    type: array
                    items:
                      type: string

    patch:
      summary: Update catalog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                products:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: Catalog successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  doc:
                    type: object

    delete:
      summary: Delete catalog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Catalog successfully deleted
